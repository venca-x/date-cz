<?php

//require_once '/src/DateCZ.php';
require_once './src/test/bootstrap.php';

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2013-09-16 at 18:30:44.
 */
class DateCZTest extends PHPUnit_Framework_TestCase
{

    /**
     * @var DateCZ
     */
    protected $dateCZ;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->dateCZ = new DateCZ;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
        
    }

    /**
     * @covers MonthNameCZ::getMonthNameCZ
     * @todo   Implement testGetMonthNameCZ().
     */
    public function testGetMonthNameCZ()
    {
        //months
        $this->assertEquals( 'leden', $this->dateCZ->getMonthName( 1 ) );
        $this->assertEquals( 'únor', $this->dateCZ->getMonthName( 2 ) );
        $this->assertEquals( 'březen', $this->dateCZ->getMonthName( 3 ) );
        $this->assertEquals( 'duben', $this->dateCZ->getMonthName( 4 ) );
        $this->assertEquals( 'květen', $this->dateCZ->getMonthName( 5 ) );
        $this->assertEquals( 'červen', $this->dateCZ->getMonthName( 6 ) );
        $this->assertEquals( 'červenec', $this->dateCZ->getMonthName( 7 ) );
        $this->assertEquals( 'srpen', $this->dateCZ->getMonthName( 8 ) );
        $this->assertEquals( 'září', $this->dateCZ->getMonthName( 9 ) );
        $this->assertEquals( 'říjen', $this->dateCZ->getMonthName( 10 ) );
        $this->assertEquals( 'listopad', $this->dateCZ->getMonthName( 11 ) );
        $this->assertEquals( 'prosinec', $this->dateCZ->getMonthName( 12 ) );       
        
        //wrong values
        $this->assertEquals( NULL, $this->dateCZ->getMonthName( 0 ) );
        $this->assertEquals( NULL, $this->dateCZ->getMonthName( 13 ) );
        $this->assertEquals( NULL, $this->dateCZ->getMonthName(  ) );
        $this->assertEquals( NULL, $this->dateCZ->getMonthName( "" ) );
        $this->assertEquals( NULL, $this->dateCZ->getMonthName( "asdf" ) );
        $this->assertEquals( NULL, $this->dateCZ->getMonthName( NULL ) );

        
        //days
        $this->assertEquals( 'pondělí', $this->dateCZ->getDayName( 1 ), "xxx1" );
        $this->assertEquals( 'úterý', $this->dateCZ->getDayName( 2 ) );
        $this->assertEquals( 'středa', $this->dateCZ->getDayName( 3 ) );
        $this->assertEquals( 'čtvrtek', $this->dateCZ->getDayName( 4 ) );
        $this->assertEquals( 'pátek', $this->dateCZ->getDayName( 5 ) );
        $this->assertEquals( 'sobota', $this->dateCZ->getDayName( 6 ) );
        $this->assertEquals( 'neděle', $this->dateCZ->getDayName( 7 ) );
        
        //wrong values
        $this->assertEquals( NULL, $this->dateCZ->getDayName( 0 ) );
        $this->assertEquals( NULL, $this->dateCZ->getDayName( 8 ) );
        $this->assertEquals( NULL, $this->dateCZ->getDayName(  ) );
        $this->assertEquals( NULL, $this->dateCZ->getDayName( "" ) );
        $this->assertEquals( NULL, $this->dateCZ->getDayName( "asdf" ) );
        $this->assertEquals( NULL, $this->dateCZ->getDayName( NULL ) );
    }

}
